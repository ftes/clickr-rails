# https://docs.travis-ci.com/user/build-stages/matrix-expansion/
# https://docs.travis-ci.com/user/build-stages/using-yaml-aliases/
# https://docs.travis-ci.com/user/multi-cpu-architectures/

os: linux

# Don't use top-level `arch` field. Different languages cannot be added to the build matrix but must be specified
# via jobs.include anyway.

# TODO python
# TODO push docker image on after_success
# TODO balena push on success (using git -> easier)
# TODO heroku release on success

stages:
  - test
  - build-docker-images
#  - name: deploy
#    if: branch = master

services:
  - docker

env:
  global:
    # Configured as secret environment variable via Travis UI
    #- CC_TEST_REPORTER_ID=ABC123


jobs:
  include:
    # Test services/web
    - &test-web
      arch: amd64
      language: ruby
      rvm: 2.5.7
      env:
        - RAILS_ENV=test
      cache:
        yarn: true # $HOME/.cache/yarn
        directories:
          - $HOME/.rvm # Probably already the case with `language: ruby`
          - $HOME/.nvm
          - $HOME/.npm
          - services/web/node_modules
          - services/web/vendor/bundle # bundler cache
          - services/web/tmp/cache # rails cache
          - services/web/public/assets
          - services/web/public/packs
          - services/web/public/packs-test
      before_install:
        # Install codeclimate test reporter if not present
        - cd services/web
        # update to bundler 2.0 https://docs.travis-ci.com/user/languages/ruby/#bundler-20
        - gem install bundler
        - nvm install node
        - nvm use node
        # Install yarn if not present
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && chmod +x ./cc-test-reporter
      install:
        - bundler install --jobs 4 --without development production --deployment
        - yarn install --production --frozen-lockfile
      before_script:
        # precompile for (hopefully) better speed when executing. Does this help with caching?
        - REQUIRE_MASTER_KEY=false SECRET_KEY_BASE=1 bundle exec rails assets:precompile
        - bundle exec rails db:migrate
      script:
        - ./cc-test-reporter before-build
        - bundle exec rails test
        - ./cc-test-reporter format-coverage --add-prefix services/web/
        - ./cc-test-reporter upload-coverage
     # Won't perform tests on ARM for now
     #- <<: *test-web
     #  arch: arm64

    # Build services/web docker image
    - &build-docker-image-web
      stage: build-docker-images
      arch: amd64
      language: minimal
      env:
        - RAILS_ENV=production
      before_install:
        - ./bin/docker-template
        - cd services/web
      script:
        - docker build -t ftes/clickr-rails-$TRAVIS_CPU_ARCH .
    - <<: *build-docker-image-web
      arch: arm64
      before_install:
        - ./bin/docker-template arm64v8/alpine:latest arm64v8/python:3-alpine
        - cd services/web

#jobs:
#  include:
#    - stage: test
#    - stage: deploy
#      install: skip # bundle install is not required
#        - docker build -t ftes/clickr-rails-web .
#    - language: python
#      cache: pip
#      before_install:
#        - cd services/rfid-keyboard-reader
#      install:
#        - pip install -r requirements.txt
#      script:
#        - docker build -t ftes/clickr-rails-rfid-keyboard-reader .
