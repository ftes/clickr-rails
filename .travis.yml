# https://docs.travis-ci.com/user/build-stages/matrix-expansion/
# https://docs.travis-ci.com/user/build-stages/using-yaml-aliases/
# https://docs.travis-ci.com/user/multi-cpu-architectures/

os: linux

# Don't use top-level `arch` field. Different languages cannot be added to the build matrix but must be specified
# via jobs.include anyway.

# TODO docker build (use correct base image per arch)
# TODO python
# TODO push docker image on after_success
# TODO balena push on success (using git -> easier)
# TODO heroku release on success

jobs:
  include:
    # stage: test is the default (can be omitted)
    - &test-web
      # $TRAVIS_CPU_ARCH
      arch: amd64
      stage: test
      language: ruby
      cache:
        bundler: true
        yarn: true # $HOME/.cache/yarn
        npm: true # $HOME/.npm or node_modules
        directories:
        - node_modules # redundant to above?
        - $HOME/.yarn
        - tmp/cache
      before_install:
        - cd services/web
        # update to bundler 2.0 https://docs.travis-ci.com/user/languages/ruby/#bundler-20
        - gem install bundler
        - nvm install node
        - nvm use node
        - curl -o- -L https://yarnpkg.com/install.sh | bash
      bundler_args: --without development production --deployment
      before_script:
        # precompile for (hopefully) better speed when executing. Does this help with caching?
        - RAILS_ENV=production REQUIRE_MASTER_KEY=false SECRET_KEY_BASE=1 bundle exec rails assets:precompile
      rvm: 2.5.7
      env:
        - RAILS_ENV=test
      script:
        - bundle exec rails db:migrate
        - bundle exec rails test
    - <<: *test-web
      arch: arm64

#services:
#  - docker

#stages:
#  - compile
#  - test
#  - name: deploy
#    if: branch = master

#jobs:
#  include:
#    - stage: test
#    - stage: deploy
#      install: skip # bundle install is not required
#        - docker build -t ftes/clickr-rails-web .
#    - language: python
#      cache: pip
#      before_install:
#        - cd services/rfid-keyboard-reader
#      install:
#        - pip install -r requirements.txt
#      script:
#        - docker build -t ftes/clickr-rails-rfid-keyboard-reader .
# TODO balena push
