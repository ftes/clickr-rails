# https://docs.travis-ci.com/user/build-stages/matrix-expansion/
# https://docs.travis-ci.com/user/build-stages/using-yaml-aliases/
# https://docs.travis-ci.com/user/multi-cpu-architectures/

os: linux

# Don't use top-level `arch` field. Different languages cannot be added to the build matrix but must be specified
# via jobs.include anyway.

# TODO docker build (use correct base image per arch)
# TODO python
# TODO push docker image on after_success
# TODO balena push on success (using git -> easier)
# TODO heroku release on success

stages:
  - test
  - build-docker-images
#  - name: deploy
#    if: branch = master

services:
  - docker

jobs:
  include:
    - &test-web
      # $TRAVIS_CPU_ARCH
      arch: amd64
      language: ruby
      rvm: 2.5.7
      env:
        - RAILS_ENV=test
      cache:
        yarn: true # $HOME/.cache/yarn
        directories:
          - $HOME/.rvm # Probably already the case with `language: ruby`
          - $HOME/.nvm
          - services/web/node_modules
          - services/web/vendor/bundle # bundler cache
          - services/web/tmp/cache # rails cache
      before_install:
        - cd services/web
        # update to bundler 2.0 https://docs.travis-ci.com/user/languages/ruby/#bundler-20
        - gem install bundler
        - nvm install node
        - nvm use node
        - curl -o- -L https://yarnpkg.com/install.sh | bash
      install:
        - bundler install --jobs 4 --without development production --deployment
        - yarn install --production --frozen-lockfile
      before_script:
        # precompile for (hopefully) better speed when executing. Does this help with caching?
        - RAILS_ENV=production REQUIRE_MASTER_KEY=false SECRET_KEY_BASE=1 bundle exec rails assets:precompile
      script:
        - bundle exec rails db:migrate
        - bundle exec rails test
    - <<: *test-web
      arch: arm64
    - &build-docker-image-web
      stage: build-docker-images
      arch: amd64
      env:
        - RAILS_ENV=production
      before_install:
        - ./bin/docker-template arm64v8/alpine:latest arm64v8/python:3-alpine
        - cd services/web
      script:
        - docker build -t ftes/clickr-rails-$TRAVIS_CPU_ARCH .
    - <<: *build-docker-image-web
      arch: arm64

#jobs:
#  include:
#    - stage: test
#    - stage: deploy
#      install: skip # bundle install is not required
#        - docker build -t ftes/clickr-rails-web .
#    - language: python
#      cache: pip
#      before_install:
#        - cd services/rfid-keyboard-reader
#      install:
#        - pip install -r requirements.txt
#      script:
#        - docker build -t ftes/clickr-rails-rfid-keyboard-reader .
